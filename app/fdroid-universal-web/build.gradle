plugins {
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'

	id 'java'
	id 'maven-publish' // required for jitpack
	id 'org.springdoc.openapi-gradle-plugin'
}

// required for jitpack
ext {
	PUBLISH_MODUL_DESCRIPTION = 'Spring-Boot web application'
}

java {
	sourceCompatibility = rootProject.ext.COMPILER_VERSION_PC
	targetCompatibility = rootProject.ext.COMPILER_VERSION_PC
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

dependencies {
	implementation(project(path: ':app:fdroid-domain'))
	implementation(project(path: ':app:fdroid-v1'))
	implementation(project(path: ':app:fdroid-repository-jpa'))
	implementation(project(path: ':app:fdroid-html'))

	// generate swagger documentation for rest webservices
	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	implementation 'javax.persistence:javax.persistence-api:2.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    def HSQLDB_VERSION = rootProject.ext.HSQLDB_VERSION
    // runtimeOnly 'org.hsqldb:hsqldb'
    implementation "org.hsqldb:hsqldb:$HSQLDB_VERSION"

    implementation "commons-io:commons-io:$rootProject.ext.COMMONS_IO_VERSION"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    def JUNIT5_VERSION = rootProject.ext.JUNIT5_VERSION
    testImplementation "org.junit.jupiter:junit-jupiter-api:$JUNIT5_VERSION"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$JUNIT5_VERSION"

    testImplementation 'org.hamcrest:hamcrest:2.2'
}

tasks.named('test') {
	useJUnitPlatform()
}
