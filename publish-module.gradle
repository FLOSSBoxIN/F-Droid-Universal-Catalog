// for details see https://proandroiddev.com/publishing-android-libraries-to-mavencentral-in-2021-8ac9975c3e52
// inspired by  https://github.com/GetStream/stream-chat-android/blob/develop/scripts/publish-module.gradle

// apply plugin: 'maven-publish'

// variables inherited from root-build.gradle

tasks.register('javadocs', Javadoc) {
    if (project.plugins.findPlugin("com.android.library")) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        android.libraryVariants.all { variant ->
            if (variant.name == 'release') {
                owner.classpath += variant.javaCompileProvider.get().classpath
            }
        }
    } else {
        source = sourceSets.main.java.srcDirs
    }
    exclude '**/R.html', '**/R.*.html', '**/index.html'
}

tasks.register('javadocsJar', Jar) {
    dependsOn javadocs
    archiveClassifier.set('javadoc')
    from javadocs.destinationDir
}

tasks.register('sourcesJar', Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        from android.sourceSets.main.java.srcDirs
    } else {
        from sourceSets.main.java.srcDirs
    }
}

artifacts {
    archives sourcesJar
    archives javadocsJar
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = rootProject.ext.PUBLISH_GROUP_ID
            // artifactId = 'library'
            version = rootProject.ext.PUBLISH_VERSION
            // from components.java
        }
    }
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId rootProject.ext.PUBLISH_GROUP_ID
                artifactId ext.PUBLISH_ARTIFACT_ID
                version rootProject.ext.PUBLISH_VERSION
                if (project.plugins.findPlugin("com.android.library")) {
                    from components.release
                } else {
                    from components.java
                }

                artifact sourcesJar

                pom {
                    name = ext.PUBLISH_ARTIFACT_ID
                    description = ext.PUBLISH_MODUL_DESCRIPTION
                    url = "https://" + rootProject.ext.SOURCES
                    licenses {
                        license {
                            name = rootProject.ext.LICENSE_TYP
                            url = 'https://' + rootProject.ext.SOURCES + '/blob/master/LICENSE'
                        }
                    }
                    developers {
                        developer {
                            id = 'k3b'
                            name = 'k3b'
                            email = '1374583+k3b@users.noreply.github.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:' + rootProject.ext.SOURCES + '.git'
                        developerConnection = 'scm:git:ssh://' + rootProject.ext.SOURCES + '.git'
                        url = 'https://' + rootProject.ext.SOURCES + '/tree/main'
                    }
                }
            }
        }
    }
}
